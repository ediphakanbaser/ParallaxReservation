@model Parallax.Models.ReservationViewModel

@{
    ViewBag.Title = "Reservation";
    ViewBag.Title = "Time Slots";
}


<div class="r-box">
    <div class="calendar">
        <div id="datepicker"></div>
        <div class="choice-box">
            <div class="vertical-box">
                <label id="date-text">Tarih:</label>
                <input required id="datepicker-input" placeholder="Gün Seçimi">
            </div>
            <div class="vertical-box">
                <label id="date-text">Hizmet:</label>
                <select required id="serviceSelect">
                    <option value="" disabled selected>Hizmet Seçimi</option>
                    @foreach (var service in Model.TBLSERVICEs)
                    {
                        <option value="@service.ServiceID" data-timespent="@service.TimeSpent">@service.ServiceName</option>
                    }
                </select>

            </div>
            <div class="vertical-box">
                <button id="reservationSave">Rezervasyon Oluştur</button>
            </div>
            
        </div>
    </div>
    <div class="reservation-list">
        <div id="employeeList">
            <div class="p-box">
                <h1>RANDEVU</h1>
                <br />
                <br />
                <h3>
                    Kullanıcımız olarak ilk deneyiminiz ise lütfen sistemi öğrenmek adına bütün metni okuyunuz.
                    <br />
                    <br />
                    Rezervasyon yapabilmek için önce takvim üzerinden tarih sonrasında istediğiniz hizmeti seçiniz. Her hizmet seçiminizde rezervasyon sayfası değişecektir.
                    <br />
                    <br />
                    Seçilmiş hizmeti veren ilgili personellerimizin müsait olduğu zaman listesinden size uygun birini seçebilirsiniz.
                    <br />
                    <br />
                    Yapılan seçim sonrasında ekranın sol kısmında seçtiğiniz rezervasyonun bilgilerini görüntüleyeceksiniz. Artık tek yapmanız gereken yerinizi ayırtabilmek için Rezervasyonu onayla butonuna tıklamak :)
                </h3>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {

        

        $("#serviceSelect").on("change", function () {
            var selectedDateTime = $("#datepicker-input").val();
            var selectedOption = $("#serviceSelect option:selected");
            var selectedTimeSpent = selectedOption.length > 0 ? selectedOption.data("timespent") : null;

            if (selectedTimeSpent === null) {
                alert("Hizmete ait geçerli bir süre bilgisi bulunamadı.");
                return;
            }

            // Tarih formatını kontrol etmek için bir regex kullanabilirsiniz.
            var dateFormatRegex = /^\d{4}-\d{2}-\d{2}$/;

            if (!dateFormatRegex.test(selectedDateTime)) {
                alert("Geçersiz tarih formatı. Lütfen yyyy-MM-dd formatında giriniz.");
                return;
            }
            else {
                $.ajax({
                type: "POST",
                url: '@Url.Action("Reservation", "Reservation")',
                data: {
                        selectedDateTime: selectedDateTime,
                        selectedServiceId: $("#serviceSelect").val(),
                        selectedTimeSpent: selectedTimeSpent
                      },
                    success: function (result) {
                        if (result.success) {
                            // Başarılı durumda çalışanları listeleyin
                            var employeeList = $("#employeeList");
                            employeeList.empty();

                            $.each(result.employees, function (index, employee) {
                                var employeeDiv = $('<div class="calendar-cards"><div class="worker-img" style="background-image: url(' + employee.EmpImageURL + ')"></div><div class="reservation-info"><h2>' + employee.EmpName + " " + employee.EmpSurname + '</h2><div class="timelinebox"><div class="timeline-left"><fieldset id="field1"></fieldset></div><div class="timeline-right"><fieldset id="field2"></fieldset></div></div></div></div>');

                                // Her çalışan için FinalTimeSlots'ları al
                                var finalTimeSlots = result.timeSlotsList[index].FinalTimeSlots;

                                // Çalışanın FinalTimeSlots sayısını al
                                var finalTimeSlotsCount = result.finalTimeSlotsCounts[index];

                                // Timeline sınıflarını ayarla
                                if (finalTimeSlotsCount > 0) {
                                    // 0'dan count/2'ye kadar olan indexler için timeline-left sınıfını ekle
                                    for (var i = 0; i < Math.floor(finalTimeSlotsCount / 2); i++) {
                                        employeeDiv.find('#field1').append('<div><input type="radio" id="' + [i] + '" name="option" value="' + employee.EmployeeServiceID+ '"><label for="' + finalTimeSlots[i] +'" > '+ finalTimeSlots[i] +'</label></div>');
                                    }

                                    // count/2'den count'e kadar olan indexler için timeline-right sınıfını ekle
                                    for (var j = Math.floor(finalTimeSlotsCount / 2); j < finalTimeSlotsCount; j++) {
                                        employeeDiv.find('#field2').append('<div><input type="radio" id="' + [i + j] + '" name="option" value="' + employee.EmployeeServiceID + '"><label for="' + finalTimeSlots[j] + '">' + finalTimeSlots[j] + '</label></div>');
                                    }
                                }

                                employeeList.append(employeeDiv);
                            });
                        } else {
                            // Hata durumunda kullanıcıya bilgi verin
                            alert(result.message);
                        }
                    },

                    error: function () {
                    // Hata durumunda genel bir mesaj gösterin
                    alert("Bir hata oluştu.");
                    },

                });

            }
        });

    });

    $('#reservationSave').on('click', function () {
        var selectedDateTime = $("#datepicker-input").val();
        var selectedTime = $('input[name="option"]:checked').next('label').text();
        var employeeId = $("input[name='option']:checked").val();

        if (!selectedTime) {
            alert("Lütfen bir zaman aralığı seçin.");
            return;
        }

        // Diğer gerekli bilgileri alıyoruz
        var reservationData = {
            username: "@Session["UsernameSS"]", // Bu Session bilgisini kullanıcı oturumu açıkken alınan bilgi olarak düşündüm
            reserveDate: selectedDateTime,
            employeeServiceId: employeeId,
            reserveTime: selectedTime.split(' - ')[0],
            serviceTime: selectedTime.split(' - ')[1]
        };

        // Controller'a JSON nesnesini göndermek için AJAX isteği yap
        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveReservation", "Reservation")',
            data: reservationData,
            success: function (result) {
                if (result.success) {
                    // Başarılı durumda kullanıcıya bilgi verin veya başka bir işlem yapın
                    alert("Rezervasyon başarıyla kaydedildi.");
                    window.location.href = '/Reservation/Reservation'
                } else {
                    // Hata durumunda kullanıcıya bilgi verin
                    alert(result.message);
                }
            },
            error: function () {
                // Hata durumunda genel bir mesaj gösterin
                alert("Bir hata oluştu.");
            }
        });
    });
</script>

